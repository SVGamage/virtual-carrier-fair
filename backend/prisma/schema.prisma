datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  email           String            @unique
  full_name       String
  username        String
  password        String
  user_type       UserType          @relation(fields: [user_type_id], references: [id])
  user_type_id    String            @db.ObjectId
  created_at      DateTime          @default(now())
  CandidateInfo   CandidateInfo[]
  UserSocialMedia UserSocialMedia[]
  CompanyInfo     CompanyInfo[]

  @@map("user_auth")
}

model UserType {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  display_name String
  users        User[]

  @@map("user_type")
}

model CandidateInfo {
  id                    String            @id @default(auto()) @map("_id") @db.ObjectId
  user                  User              @relation(fields: [user_id], references: [id])
  user_id               String            @db.ObjectId
  first_name            String
  last_name             String
  phone_number          String
  date_of_birth         DateTime
  Gender                String
  bio                   String
  address               String
  experienceLevel       Int
  educationLevel        String
  acedemy               String
  profile_pic           String
  personal_website      String
  social_media_profiles UserSocialMedia[]

  @@map("candidate_info")
}

model CompanyInfo {
  id                            String            @id @default(auto()) @map("_id") @db.ObjectId
  user                          User              @relation(fields: [user_id], references: [id])
  user_id                       String            @db.ObjectId
  company_name                  String
  company_size                  Int
  company_type                  String
  company_bio                   String
  company_logo                  String
  company_banner                String
  company_website               String
  company_address               String
  company_established_date      DateTime
  company_social_media_profiles UserSocialMedia[]

  @@map("company_info")
}

model SocialMedia {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  display_name      String
  user_social_media UserSocialMedia[]

  @@map("social_media")
}

model UserSocialMedia {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  user            User           @relation(fields: [user_id], references: [id])
  user_id         String         @db.ObjectId
  social_media    SocialMedia    @relation(fields: [social_media_id], references: [id])
  social_media_id String         @db.ObjectId
  link            String
  CandidateInfo   CandidateInfo? @relation(fields: [candidateInfoId], references: [id])
  candidateInfoId String?        @db.ObjectId
  CompanyInfo     CompanyInfo?   @relation(fields: [companyInfoId], references: [id])
  companyInfoId   String?        @db.ObjectId

  @@map("user_social_media")
}
